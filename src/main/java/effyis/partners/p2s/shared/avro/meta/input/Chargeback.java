/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package effyis.partners.p2s.shared.avro.meta.input;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** Information about any chargeback related to the transaction */
@org.apache.avro.specific.AvroGenerated
public class Chargeback extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -2508166893162846209L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Chargeback\",\"namespace\":\"effyis.partners.p2s.shared.avro.meta.input\",\"doc\":\"Information about any chargeback related to the transaction\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Chargeback transaction id (P2S-00017)\"},{\"name\":\"originalId\",\"type\":\"string\",\"doc\":\"Original transaction Id (P2S-00018)\"},{\"name\":\"cardholderdisputedate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the cardholder initiated the dispute (P2S-00019)\",\"default\":null},{\"name\":\"issuingDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the issuing bank received the chargeback (P2S-00020)\",\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount disputed by the cardholder (P2S-00021)\",\"default\":null},{\"name\":\"reasonCode\",\"type\":[\"null\",\"string\"],\"doc\":\"The reason code for the chargeback (P2S-00022)\",\"default\":null},{\"name\":\"representment\",\"type\":[\"null\",\"string\"],\"doc\":\"Information related to the chargeback representation (P2S-00023)\",\"default\":null},{\"name\":\"representmentDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date of the representation (P2S-00024)\",\"default\":null},{\"name\":\"representmentReasonCode\",\"type\":[\"null\",\"string\"],\"doc\":\"The reason for the representation (P2S-00025)\",\"default\":null},{\"name\":\"representmentAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount represented in the chargeback process (P2S-00026)\",\"default\":null},{\"name\":\"arbitrationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the arbitration process was initiated (P2S-00027)\",\"default\":null},{\"name\":\"arbitrationReasonCode\",\"type\":[\"null\",\"string\"],\"doc\":\"The reason code for the arbitration (P2S-00028)\",\"default\":null},{\"name\":\"arbitrationAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount being contested during the arbitration process (P2S-00029)\",\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Chargeback> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Chargeback> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Chargeback> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Chargeback> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Chargeback> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Chargeback to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Chargeback from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Chargeback instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Chargeback fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Chargeback transaction id (P2S-00017) */
  private java.lang.CharSequence id;
  /** Original transaction Id (P2S-00018) */
  private java.lang.CharSequence originalId;
  /** The date the cardholder initiated the dispute (P2S-00019) */
  private java.lang.CharSequence cardholderdisputedate;
  /** The date the issuing bank received the chargeback (P2S-00020) */
  private java.lang.CharSequence issuingDate;
  /** The amount disputed by the cardholder (P2S-00021) */
  private java.math.BigDecimal amount;
  /** The reason code for the chargeback (P2S-00022) */
  private java.lang.CharSequence reasonCode;
  /** Information related to the chargeback representation (P2S-00023) */
  private java.lang.CharSequence representment;
  /** The date of the representation (P2S-00024) */
  private java.lang.CharSequence representmentDate;
  /** The reason for the representation (P2S-00025) */
  private java.lang.CharSequence representmentReasonCode;
  /** The amount represented in the chargeback process (P2S-00026) */
  private java.math.BigDecimal representmentAmount;
  /** The date the arbitration process was initiated (P2S-00027) */
  private java.lang.CharSequence arbitrationDate;
  /** The reason code for the arbitration (P2S-00028) */
  private java.lang.CharSequence arbitrationReasonCode;
  /** The amount being contested during the arbitration process (P2S-00029) */
  private java.math.BigDecimal arbitrationAmount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Chargeback() {}

  /**
   * All-args constructor.
   * @param id Chargeback transaction id (P2S-00017)
   * @param originalId Original transaction Id (P2S-00018)
   * @param cardholderdisputedate The date the cardholder initiated the dispute (P2S-00019)
   * @param issuingDate The date the issuing bank received the chargeback (P2S-00020)
   * @param amount The amount disputed by the cardholder (P2S-00021)
   * @param reasonCode The reason code for the chargeback (P2S-00022)
   * @param representment Information related to the chargeback representation (P2S-00023)
   * @param representmentDate The date of the representation (P2S-00024)
   * @param representmentReasonCode The reason for the representation (P2S-00025)
   * @param representmentAmount The amount represented in the chargeback process (P2S-00026)
   * @param arbitrationDate The date the arbitration process was initiated (P2S-00027)
   * @param arbitrationReasonCode The reason code for the arbitration (P2S-00028)
   * @param arbitrationAmount The amount being contested during the arbitration process (P2S-00029)
   */
  public Chargeback(java.lang.CharSequence id, java.lang.CharSequence originalId, java.lang.CharSequence cardholderdisputedate, java.lang.CharSequence issuingDate, java.math.BigDecimal amount, java.lang.CharSequence reasonCode, java.lang.CharSequence representment, java.lang.CharSequence representmentDate, java.lang.CharSequence representmentReasonCode, java.math.BigDecimal representmentAmount, java.lang.CharSequence arbitrationDate, java.lang.CharSequence arbitrationReasonCode, java.math.BigDecimal arbitrationAmount) {
    this.id = id;
    this.originalId = originalId;
    this.cardholderdisputedate = cardholderdisputedate;
    this.issuingDate = issuingDate;
    this.amount = amount;
    this.reasonCode = reasonCode;
    this.representment = representment;
    this.representmentDate = representmentDate;
    this.representmentReasonCode = representmentReasonCode;
    this.representmentAmount = representmentAmount;
    this.arbitrationDate = arbitrationDate;
    this.arbitrationReasonCode = arbitrationReasonCode;
    this.arbitrationAmount = arbitrationAmount;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return originalId;
    case 2: return cardholderdisputedate;
    case 3: return issuingDate;
    case 4: return amount;
    case 5: return reasonCode;
    case 6: return representment;
    case 7: return representmentDate;
    case 8: return representmentReasonCode;
    case 9: return representmentAmount;
    case 10: return arbitrationDate;
    case 11: return arbitrationReasonCode;
    case 12: return arbitrationAmount;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.CharSequence)value$; break;
    case 1: originalId = (java.lang.CharSequence)value$; break;
    case 2: cardholderdisputedate = (java.lang.CharSequence)value$; break;
    case 3: issuingDate = (java.lang.CharSequence)value$; break;
    case 4: amount = (java.math.BigDecimal)value$; break;
    case 5: reasonCode = (java.lang.CharSequence)value$; break;
    case 6: representment = (java.lang.CharSequence)value$; break;
    case 7: representmentDate = (java.lang.CharSequence)value$; break;
    case 8: representmentReasonCode = (java.lang.CharSequence)value$; break;
    case 9: representmentAmount = (java.math.BigDecimal)value$; break;
    case 10: arbitrationDate = (java.lang.CharSequence)value$; break;
    case 11: arbitrationReasonCode = (java.lang.CharSequence)value$; break;
    case 12: arbitrationAmount = (java.math.BigDecimal)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return Chargeback transaction id (P2S-00017)
   */
  public java.lang.CharSequence getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * Chargeback transaction id (P2S-00017)
   * @param value the value to set.
   */
  public void setId(java.lang.CharSequence value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'originalId' field.
   * @return Original transaction Id (P2S-00018)
   */
  public java.lang.CharSequence getOriginalId() {
    return originalId;
  }


  /**
   * Sets the value of the 'originalId' field.
   * Original transaction Id (P2S-00018)
   * @param value the value to set.
   */
  public void setOriginalId(java.lang.CharSequence value) {
    this.originalId = value;
  }

  /**
   * Gets the value of the 'cardholderdisputedate' field.
   * @return The date the cardholder initiated the dispute (P2S-00019)
   */
  public java.lang.CharSequence getCardholderdisputedate() {
    return cardholderdisputedate;
  }


  /**
   * Sets the value of the 'cardholderdisputedate' field.
   * The date the cardholder initiated the dispute (P2S-00019)
   * @param value the value to set.
   */
  public void setCardholderdisputedate(java.lang.CharSequence value) {
    this.cardholderdisputedate = value;
  }

  /**
   * Gets the value of the 'issuingDate' field.
   * @return The date the issuing bank received the chargeback (P2S-00020)
   */
  public java.lang.CharSequence getIssuingDate() {
    return issuingDate;
  }


  /**
   * Sets the value of the 'issuingDate' field.
   * The date the issuing bank received the chargeback (P2S-00020)
   * @param value the value to set.
   */
  public void setIssuingDate(java.lang.CharSequence value) {
    this.issuingDate = value;
  }

  /**
   * Gets the value of the 'amount' field.
   * @return The amount disputed by the cardholder (P2S-00021)
   */
  public java.math.BigDecimal getAmount() {
    return amount;
  }


  /**
   * Sets the value of the 'amount' field.
   * The amount disputed by the cardholder (P2S-00021)
   * @param value the value to set.
   */
  public void setAmount(java.math.BigDecimal value) {
    this.amount = value;
  }

  /**
   * Gets the value of the 'reasonCode' field.
   * @return The reason code for the chargeback (P2S-00022)
   */
  public java.lang.CharSequence getReasonCode() {
    return reasonCode;
  }


  /**
   * Sets the value of the 'reasonCode' field.
   * The reason code for the chargeback (P2S-00022)
   * @param value the value to set.
   */
  public void setReasonCode(java.lang.CharSequence value) {
    this.reasonCode = value;
  }

  /**
   * Gets the value of the 'representment' field.
   * @return Information related to the chargeback representation (P2S-00023)
   */
  public java.lang.CharSequence getRepresentment() {
    return representment;
  }


  /**
   * Sets the value of the 'representment' field.
   * Information related to the chargeback representation (P2S-00023)
   * @param value the value to set.
   */
  public void setRepresentment(java.lang.CharSequence value) {
    this.representment = value;
  }

  /**
   * Gets the value of the 'representmentDate' field.
   * @return The date of the representation (P2S-00024)
   */
  public java.lang.CharSequence getRepresentmentDate() {
    return representmentDate;
  }


  /**
   * Sets the value of the 'representmentDate' field.
   * The date of the representation (P2S-00024)
   * @param value the value to set.
   */
  public void setRepresentmentDate(java.lang.CharSequence value) {
    this.representmentDate = value;
  }

  /**
   * Gets the value of the 'representmentReasonCode' field.
   * @return The reason for the representation (P2S-00025)
   */
  public java.lang.CharSequence getRepresentmentReasonCode() {
    return representmentReasonCode;
  }


  /**
   * Sets the value of the 'representmentReasonCode' field.
   * The reason for the representation (P2S-00025)
   * @param value the value to set.
   */
  public void setRepresentmentReasonCode(java.lang.CharSequence value) {
    this.representmentReasonCode = value;
  }

  /**
   * Gets the value of the 'representmentAmount' field.
   * @return The amount represented in the chargeback process (P2S-00026)
   */
  public java.math.BigDecimal getRepresentmentAmount() {
    return representmentAmount;
  }


  /**
   * Sets the value of the 'representmentAmount' field.
   * The amount represented in the chargeback process (P2S-00026)
   * @param value the value to set.
   */
  public void setRepresentmentAmount(java.math.BigDecimal value) {
    this.representmentAmount = value;
  }

  /**
   * Gets the value of the 'arbitrationDate' field.
   * @return The date the arbitration process was initiated (P2S-00027)
   */
  public java.lang.CharSequence getArbitrationDate() {
    return arbitrationDate;
  }


  /**
   * Sets the value of the 'arbitrationDate' field.
   * The date the arbitration process was initiated (P2S-00027)
   * @param value the value to set.
   */
  public void setArbitrationDate(java.lang.CharSequence value) {
    this.arbitrationDate = value;
  }

  /**
   * Gets the value of the 'arbitrationReasonCode' field.
   * @return The reason code for the arbitration (P2S-00028)
   */
  public java.lang.CharSequence getArbitrationReasonCode() {
    return arbitrationReasonCode;
  }


  /**
   * Sets the value of the 'arbitrationReasonCode' field.
   * The reason code for the arbitration (P2S-00028)
   * @param value the value to set.
   */
  public void setArbitrationReasonCode(java.lang.CharSequence value) {
    this.arbitrationReasonCode = value;
  }

  /**
   * Gets the value of the 'arbitrationAmount' field.
   * @return The amount being contested during the arbitration process (P2S-00029)
   */
  public java.math.BigDecimal getArbitrationAmount() {
    return arbitrationAmount;
  }


  /**
   * Sets the value of the 'arbitrationAmount' field.
   * The amount being contested during the arbitration process (P2S-00029)
   * @param value the value to set.
   */
  public void setArbitrationAmount(java.math.BigDecimal value) {
    this.arbitrationAmount = value;
  }

  /**
   * Creates a new Chargeback RecordBuilder.
   * @return A new Chargeback RecordBuilder
   */
  public static effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder newBuilder() {
    return new effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder();
  }

  /**
   * Creates a new Chargeback RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Chargeback RecordBuilder
   */
  public static effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder newBuilder(effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder other) {
    if (other == null) {
      return new effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder();
    } else {
      return new effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder(other);
    }
  }

  /**
   * Creates a new Chargeback RecordBuilder by copying an existing Chargeback instance.
   * @param other The existing instance to copy.
   * @return A new Chargeback RecordBuilder
   */
  public static effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder newBuilder(effyis.partners.p2s.shared.avro.meta.input.Chargeback other) {
    if (other == null) {
      return new effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder();
    } else {
      return new effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder(other);
    }
  }

  /**
   * RecordBuilder for Chargeback instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Chargeback>
    implements org.apache.avro.data.RecordBuilder<Chargeback> {

    /** Chargeback transaction id (P2S-00017) */
    private java.lang.CharSequence id;
    /** Original transaction Id (P2S-00018) */
    private java.lang.CharSequence originalId;
    /** The date the cardholder initiated the dispute (P2S-00019) */
    private java.lang.CharSequence cardholderdisputedate;
    /** The date the issuing bank received the chargeback (P2S-00020) */
    private java.lang.CharSequence issuingDate;
    /** The amount disputed by the cardholder (P2S-00021) */
    private java.math.BigDecimal amount;
    /** The reason code for the chargeback (P2S-00022) */
    private java.lang.CharSequence reasonCode;
    /** Information related to the chargeback representation (P2S-00023) */
    private java.lang.CharSequence representment;
    /** The date of the representation (P2S-00024) */
    private java.lang.CharSequence representmentDate;
    /** The reason for the representation (P2S-00025) */
    private java.lang.CharSequence representmentReasonCode;
    /** The amount represented in the chargeback process (P2S-00026) */
    private java.math.BigDecimal representmentAmount;
    /** The date the arbitration process was initiated (P2S-00027) */
    private java.lang.CharSequence arbitrationDate;
    /** The reason code for the arbitration (P2S-00028) */
    private java.lang.CharSequence arbitrationReasonCode;
    /** The amount being contested during the arbitration process (P2S-00029) */
    private java.math.BigDecimal arbitrationAmount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.originalId)) {
        this.originalId = data().deepCopy(fields()[1].schema(), other.originalId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.cardholderdisputedate)) {
        this.cardholderdisputedate = data().deepCopy(fields()[2].schema(), other.cardholderdisputedate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.issuingDate)) {
        this.issuingDate = data().deepCopy(fields()[3].schema(), other.issuingDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.amount)) {
        this.amount = data().deepCopy(fields()[4].schema(), other.amount);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[5].schema(), other.reasonCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.representment)) {
        this.representment = data().deepCopy(fields()[6].schema(), other.representment);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.representmentDate)) {
        this.representmentDate = data().deepCopy(fields()[7].schema(), other.representmentDate);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.representmentReasonCode)) {
        this.representmentReasonCode = data().deepCopy(fields()[8].schema(), other.representmentReasonCode);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.representmentAmount)) {
        this.representmentAmount = data().deepCopy(fields()[9].schema(), other.representmentAmount);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.arbitrationDate)) {
        this.arbitrationDate = data().deepCopy(fields()[10].schema(), other.arbitrationDate);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.arbitrationReasonCode)) {
        this.arbitrationReasonCode = data().deepCopy(fields()[11].schema(), other.arbitrationReasonCode);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.arbitrationAmount)) {
        this.arbitrationAmount = data().deepCopy(fields()[12].schema(), other.arbitrationAmount);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
    }

    /**
     * Creates a Builder by copying an existing Chargeback instance
     * @param other The existing instance to copy.
     */
    private Builder(effyis.partners.p2s.shared.avro.meta.input.Chargeback other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.originalId)) {
        this.originalId = data().deepCopy(fields()[1].schema(), other.originalId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.cardholderdisputedate)) {
        this.cardholderdisputedate = data().deepCopy(fields()[2].schema(), other.cardholderdisputedate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.issuingDate)) {
        this.issuingDate = data().deepCopy(fields()[3].schema(), other.issuingDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.amount)) {
        this.amount = data().deepCopy(fields()[4].schema(), other.amount);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.reasonCode)) {
        this.reasonCode = data().deepCopy(fields()[5].schema(), other.reasonCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.representment)) {
        this.representment = data().deepCopy(fields()[6].schema(), other.representment);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.representmentDate)) {
        this.representmentDate = data().deepCopy(fields()[7].schema(), other.representmentDate);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.representmentReasonCode)) {
        this.representmentReasonCode = data().deepCopy(fields()[8].schema(), other.representmentReasonCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.representmentAmount)) {
        this.representmentAmount = data().deepCopy(fields()[9].schema(), other.representmentAmount);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.arbitrationDate)) {
        this.arbitrationDate = data().deepCopy(fields()[10].schema(), other.arbitrationDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.arbitrationReasonCode)) {
        this.arbitrationReasonCode = data().deepCopy(fields()[11].schema(), other.arbitrationReasonCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.arbitrationAmount)) {
        this.arbitrationAmount = data().deepCopy(fields()[12].schema(), other.arbitrationAmount);
        fieldSetFlags()[12] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * Chargeback transaction id (P2S-00017)
      * @return The value.
      */
    public java.lang.CharSequence getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * Chargeback transaction id (P2S-00017)
      * @param value The value of 'id'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setId(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * Chargeback transaction id (P2S-00017)
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * Chargeback transaction id (P2S-00017)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'originalId' field.
      * Original transaction Id (P2S-00018)
      * @return The value.
      */
    public java.lang.CharSequence getOriginalId() {
      return originalId;
    }


    /**
      * Sets the value of the 'originalId' field.
      * Original transaction Id (P2S-00018)
      * @param value The value of 'originalId'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setOriginalId(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.originalId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'originalId' field has been set.
      * Original transaction Id (P2S-00018)
      * @return True if the 'originalId' field has been set, false otherwise.
      */
    public boolean hasOriginalId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'originalId' field.
      * Original transaction Id (P2S-00018)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearOriginalId() {
      originalId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'cardholderdisputedate' field.
      * The date the cardholder initiated the dispute (P2S-00019)
      * @return The value.
      */
    public java.lang.CharSequence getCardholderdisputedate() {
      return cardholderdisputedate;
    }


    /**
      * Sets the value of the 'cardholderdisputedate' field.
      * The date the cardholder initiated the dispute (P2S-00019)
      * @param value The value of 'cardholderdisputedate'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setCardholderdisputedate(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.cardholderdisputedate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'cardholderdisputedate' field has been set.
      * The date the cardholder initiated the dispute (P2S-00019)
      * @return True if the 'cardholderdisputedate' field has been set, false otherwise.
      */
    public boolean hasCardholderdisputedate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'cardholderdisputedate' field.
      * The date the cardholder initiated the dispute (P2S-00019)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearCardholderdisputedate() {
      cardholderdisputedate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'issuingDate' field.
      * The date the issuing bank received the chargeback (P2S-00020)
      * @return The value.
      */
    public java.lang.CharSequence getIssuingDate() {
      return issuingDate;
    }


    /**
      * Sets the value of the 'issuingDate' field.
      * The date the issuing bank received the chargeback (P2S-00020)
      * @param value The value of 'issuingDate'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setIssuingDate(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.issuingDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'issuingDate' field has been set.
      * The date the issuing bank received the chargeback (P2S-00020)
      * @return True if the 'issuingDate' field has been set, false otherwise.
      */
    public boolean hasIssuingDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'issuingDate' field.
      * The date the issuing bank received the chargeback (P2S-00020)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearIssuingDate() {
      issuingDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'amount' field.
      * The amount disputed by the cardholder (P2S-00021)
      * @return The value.
      */
    public java.math.BigDecimal getAmount() {
      return amount;
    }


    /**
      * Sets the value of the 'amount' field.
      * The amount disputed by the cardholder (P2S-00021)
      * @param value The value of 'amount'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setAmount(java.math.BigDecimal value) {
      validate(fields()[4], value);
      this.amount = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'amount' field has been set.
      * The amount disputed by the cardholder (P2S-00021)
      * @return True if the 'amount' field has been set, false otherwise.
      */
    public boolean hasAmount() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'amount' field.
      * The amount disputed by the cardholder (P2S-00021)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearAmount() {
      amount = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'reasonCode' field.
      * The reason code for the chargeback (P2S-00022)
      * @return The value.
      */
    public java.lang.CharSequence getReasonCode() {
      return reasonCode;
    }


    /**
      * Sets the value of the 'reasonCode' field.
      * The reason code for the chargeback (P2S-00022)
      * @param value The value of 'reasonCode'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setReasonCode(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.reasonCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'reasonCode' field has been set.
      * The reason code for the chargeback (P2S-00022)
      * @return True if the 'reasonCode' field has been set, false otherwise.
      */
    public boolean hasReasonCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'reasonCode' field.
      * The reason code for the chargeback (P2S-00022)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearReasonCode() {
      reasonCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'representment' field.
      * Information related to the chargeback representation (P2S-00023)
      * @return The value.
      */
    public java.lang.CharSequence getRepresentment() {
      return representment;
    }


    /**
      * Sets the value of the 'representment' field.
      * Information related to the chargeback representation (P2S-00023)
      * @param value The value of 'representment'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setRepresentment(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.representment = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'representment' field has been set.
      * Information related to the chargeback representation (P2S-00023)
      * @return True if the 'representment' field has been set, false otherwise.
      */
    public boolean hasRepresentment() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'representment' field.
      * Information related to the chargeback representation (P2S-00023)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearRepresentment() {
      representment = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'representmentDate' field.
      * The date of the representation (P2S-00024)
      * @return The value.
      */
    public java.lang.CharSequence getRepresentmentDate() {
      return representmentDate;
    }


    /**
      * Sets the value of the 'representmentDate' field.
      * The date of the representation (P2S-00024)
      * @param value The value of 'representmentDate'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setRepresentmentDate(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.representmentDate = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'representmentDate' field has been set.
      * The date of the representation (P2S-00024)
      * @return True if the 'representmentDate' field has been set, false otherwise.
      */
    public boolean hasRepresentmentDate() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'representmentDate' field.
      * The date of the representation (P2S-00024)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearRepresentmentDate() {
      representmentDate = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'representmentReasonCode' field.
      * The reason for the representation (P2S-00025)
      * @return The value.
      */
    public java.lang.CharSequence getRepresentmentReasonCode() {
      return representmentReasonCode;
    }


    /**
      * Sets the value of the 'representmentReasonCode' field.
      * The reason for the representation (P2S-00025)
      * @param value The value of 'representmentReasonCode'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setRepresentmentReasonCode(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.representmentReasonCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'representmentReasonCode' field has been set.
      * The reason for the representation (P2S-00025)
      * @return True if the 'representmentReasonCode' field has been set, false otherwise.
      */
    public boolean hasRepresentmentReasonCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'representmentReasonCode' field.
      * The reason for the representation (P2S-00025)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearRepresentmentReasonCode() {
      representmentReasonCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'representmentAmount' field.
      * The amount represented in the chargeback process (P2S-00026)
      * @return The value.
      */
    public java.math.BigDecimal getRepresentmentAmount() {
      return representmentAmount;
    }


    /**
      * Sets the value of the 'representmentAmount' field.
      * The amount represented in the chargeback process (P2S-00026)
      * @param value The value of 'representmentAmount'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setRepresentmentAmount(java.math.BigDecimal value) {
      validate(fields()[9], value);
      this.representmentAmount = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'representmentAmount' field has been set.
      * The amount represented in the chargeback process (P2S-00026)
      * @return True if the 'representmentAmount' field has been set, false otherwise.
      */
    public boolean hasRepresentmentAmount() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'representmentAmount' field.
      * The amount represented in the chargeback process (P2S-00026)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearRepresentmentAmount() {
      representmentAmount = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'arbitrationDate' field.
      * The date the arbitration process was initiated (P2S-00027)
      * @return The value.
      */
    public java.lang.CharSequence getArbitrationDate() {
      return arbitrationDate;
    }


    /**
      * Sets the value of the 'arbitrationDate' field.
      * The date the arbitration process was initiated (P2S-00027)
      * @param value The value of 'arbitrationDate'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setArbitrationDate(java.lang.CharSequence value) {
      validate(fields()[10], value);
      this.arbitrationDate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'arbitrationDate' field has been set.
      * The date the arbitration process was initiated (P2S-00027)
      * @return True if the 'arbitrationDate' field has been set, false otherwise.
      */
    public boolean hasArbitrationDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'arbitrationDate' field.
      * The date the arbitration process was initiated (P2S-00027)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearArbitrationDate() {
      arbitrationDate = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'arbitrationReasonCode' field.
      * The reason code for the arbitration (P2S-00028)
      * @return The value.
      */
    public java.lang.CharSequence getArbitrationReasonCode() {
      return arbitrationReasonCode;
    }


    /**
      * Sets the value of the 'arbitrationReasonCode' field.
      * The reason code for the arbitration (P2S-00028)
      * @param value The value of 'arbitrationReasonCode'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setArbitrationReasonCode(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.arbitrationReasonCode = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'arbitrationReasonCode' field has been set.
      * The reason code for the arbitration (P2S-00028)
      * @return True if the 'arbitrationReasonCode' field has been set, false otherwise.
      */
    public boolean hasArbitrationReasonCode() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'arbitrationReasonCode' field.
      * The reason code for the arbitration (P2S-00028)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearArbitrationReasonCode() {
      arbitrationReasonCode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'arbitrationAmount' field.
      * The amount being contested during the arbitration process (P2S-00029)
      * @return The value.
      */
    public java.math.BigDecimal getArbitrationAmount() {
      return arbitrationAmount;
    }


    /**
      * Sets the value of the 'arbitrationAmount' field.
      * The amount being contested during the arbitration process (P2S-00029)
      * @param value The value of 'arbitrationAmount'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder setArbitrationAmount(java.math.BigDecimal value) {
      validate(fields()[12], value);
      this.arbitrationAmount = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'arbitrationAmount' field has been set.
      * The amount being contested during the arbitration process (P2S-00029)
      * @return True if the 'arbitrationAmount' field has been set, false otherwise.
      */
    public boolean hasArbitrationAmount() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'arbitrationAmount' field.
      * The amount being contested during the arbitration process (P2S-00029)
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder clearArbitrationAmount() {
      arbitrationAmount = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Chargeback build() {
      try {
        Chargeback record = new Chargeback();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.originalId = fieldSetFlags()[1] ? this.originalId : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.cardholderdisputedate = fieldSetFlags()[2] ? this.cardholderdisputedate : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.issuingDate = fieldSetFlags()[3] ? this.issuingDate : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.amount = fieldSetFlags()[4] ? this.amount : (java.math.BigDecimal) defaultValue(fields()[4]);
        record.reasonCode = fieldSetFlags()[5] ? this.reasonCode : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.representment = fieldSetFlags()[6] ? this.representment : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.representmentDate = fieldSetFlags()[7] ? this.representmentDate : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.representmentReasonCode = fieldSetFlags()[8] ? this.representmentReasonCode : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.representmentAmount = fieldSetFlags()[9] ? this.representmentAmount : (java.math.BigDecimal) defaultValue(fields()[9]);
        record.arbitrationDate = fieldSetFlags()[10] ? this.arbitrationDate : (java.lang.CharSequence) defaultValue(fields()[10]);
        record.arbitrationReasonCode = fieldSetFlags()[11] ? this.arbitrationReasonCode : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.arbitrationAmount = fieldSetFlags()[12] ? this.arbitrationAmount : (java.math.BigDecimal) defaultValue(fields()[12]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Chargeback>
    WRITER$ = (org.apache.avro.io.DatumWriter<Chargeback>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Chargeback>
    READER$ = (org.apache.avro.io.DatumReader<Chargeback>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










