/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package effyis.partners.p2s.shared.avro.meta.input;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Input extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7341876230964779873L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Input\",\"namespace\":\"effyis.partners.p2s.shared.avro.meta.input\",\"fields\":[{\"name\":\"acceptor\",\"type\":{\"type\":\"record\",\"name\":\"Acceptor\",\"doc\":\"Information about the merchant accepting the transaction\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Unique ID of the merchant accepting the transaction (P2S-00001)\"},{\"name\":\"subId\",\"type\":[\"null\",\"string\"],\"doc\":\"Sub-merchant ID, used when there are multiple merchants under a single account (P2S-00002)\",\"default\":null},{\"name\":\"terminalId\",\"type\":\"string\",\"doc\":\"ID of the terminal where the transaction was made (P2S-00003)\"},{\"name\":\"pricingRuleCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Merchant pricing model applied by the acquirer or PSP (P2S-00004)\",\"default\":null},{\"name\":\"merchantCategoryCode\",\"type\":\"string\",\"doc\":\"Merchant category code indicating the type of merchant (e.g., retail, restaurant) (P2S-00005)\"},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"doc\":\"The name of the merchant (P2S-00006)\",\"default\":null},{\"name\":\"city\",\"type\":[\"null\",\"string\"],\"doc\":\"The city where the merchant is located (P2S-00007)\",\"default\":null},{\"name\":\"country\",\"type\":\"string\",\"doc\":\"The country where the merchant is located (P2S-00008)\"},{\"name\":\"identifier\",\"type\":[\"null\",\"string\"],\"doc\":\"Additional identifier for the merchant (e.g., NFC Field 55, TLV data) (P2S-00009)\",\"default\":null},{\"name\":\"referenceNumber\",\"type\":[\"null\",\"string\"],\"doc\":\"Internal reference number used by the merchant for the transaction (P2S-00010)\",\"default\":null}]},\"doc\":\"Merchant acceptor details\"},{\"name\":\"acquirer\",\"type\":{\"type\":\"record\",\"name\":\"Acquirer\",\"doc\":\"Information about the acquiring institution\",\"fields\":[{\"name\":\"acquiringInstitutionId\",\"type\":\"string\",\"doc\":\"Bank ID of acquirer (P2S-00012)\"},{\"name\":\"acquirerBin\",\"type\":\"string\",\"doc\":\"Bank Identification Number (P2S-00013)\"},{\"name\":\"country\",\"type\":\"string\",\"doc\":\"Acquirer Country (P2S-00014)\"}]},\"doc\":\"Acquiring institution details\"},{\"name\":\"card\",\"type\":{\"type\":\"record\",\"name\":\"Card\",\"doc\":\"Information about the card used in the transaction\",\"fields\":[{\"name\":\"issuerBin\",\"type\":\"string\",\"doc\":\"Issuer Bank Identification Number for detecting card type, region, and rules (P2S-00015)\"}]},\"doc\":\"Card details\"},{\"name\":\"chargeback\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Chargeback\",\"doc\":\"Information about any chargeback related to the transaction\",\"fields\":[{\"name\":\"id\",\"type\":\"string\",\"doc\":\"Chargeback transaction id (P2S-00017)\"},{\"name\":\"originalId\",\"type\":\"string\",\"doc\":\"Original transaction Id (P2S-00018)\"},{\"name\":\"cardholderdisputedate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the cardholder initiated the dispute (P2S-00019)\",\"default\":null},{\"name\":\"issuingDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the issuing bank received the chargeback (P2S-00020)\",\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount disputed by the cardholder (P2S-00021)\",\"default\":null},{\"name\":\"reasonCode\",\"type\":[\"null\",\"string\"],\"doc\":\"The reason code for the chargeback (P2S-00022)\",\"default\":null},{\"name\":\"representment\",\"type\":[\"null\",\"string\"],\"doc\":\"Information related to the chargeback representation (P2S-00023)\",\"default\":null},{\"name\":\"representmentDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date of the representation (P2S-00024)\",\"default\":null},{\"name\":\"representmentReasonCode\",\"type\":[\"null\",\"string\"],\"doc\":\"The reason for the representation (P2S-00025)\",\"default\":null},{\"name\":\"representmentAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount represented in the chargeback process (P2S-00026)\",\"default\":null},{\"name\":\"arbitrationDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The date the arbitration process was initiated (P2S-00027)\",\"default\":null},{\"name\":\"arbitrationReasonCode\",\"type\":[\"null\",\"string\"],\"doc\":\"The reason code for the arbitration (P2S-00028)\",\"default\":null},{\"name\":\"arbitrationAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount being contested during the arbitration process (P2S-00029)\",\"default\":null}]}],\"doc\":\"Chargeback details if applicable\",\"default\":null},{\"name\":\"clearing\",\"type\":{\"type\":\"record\",\"name\":\"Clearing\",\"doc\":\"Clearing information for the transaction\",\"fields\":[{\"name\":\"idPreClearing\",\"type\":\"string\",\"doc\":\"Unique identifier for the clearing entry (P2S-00030)\"},{\"name\":\"settlementAmount\",\"type\":\"string\",\"doc\":\"The currency of the settlement amount (P2S-00035)\"},{\"name\":\"dcc\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"DynamicCurrencyConversion\",\"doc\":\"Dynamic Currency Conversion details\",\"fields\":[{\"name\":\"isDcc\",\"type\":\"boolean\",\"doc\":\"Indicates if this is a DCC (Dynamic Currency Conversion) transaction (P2S-00038)\"},{\"name\":\"dccCurrency\",\"type\":[\"null\",\"string\"],\"doc\":\"The DCC currency used in the transaction (P2S-00039)\",\"default\":null},{\"name\":\"dccMarkup\",\"type\":[\"null\",\"string\"],\"doc\":\"The markup added to the DCC transaction (P2S-00040)\",\"default\":null}]}],\"doc\":\"Dynamic currency conversion details if applicable\",\"default\":null}]},\"doc\":\"Clearing details\"},{\"name\":\"paymentInstrument\",\"type\":{\"type\":\"record\",\"name\":\"PaymentInstrument\",\"doc\":\"Information about the payment instrument used\",\"fields\":[{\"name\":\"paymentInstrumentId\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier for the payment instrument (P2S-00041)\",\"default\":null},{\"name\":\"maskedPan\",\"type\":\"string\",\"doc\":\"The masked (partially obfuscated) PAN of the card used for the transaction (P2S-00043)\"},{\"name\":\"sequence\",\"type\":[\"null\",\"string\"],\"doc\":\"Sequence number to identify the card usage instance (e.g., recurring payments) (P2S-00044)\",\"default\":null},{\"name\":\"expiryDate\",\"type\":[\"null\",\"string\"],\"doc\":\"The expiration date of the card (P2S-00045)\",\"default\":null}]},\"doc\":\"Payment instrument details\"},{\"name\":\"reversals\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Reversals\",\"doc\":\"Information about any reversals applied to the transaction\",\"fields\":[{\"name\":\"datetime\",\"type\":[\"null\",\"string\"],\"doc\":\"Reversal datetime (P2S-00046)\",\"default\":null},{\"name\":\"type\",\"type\":[\"null\",\"string\"],\"doc\":\"Reversal type (Partial/Total) (P2S-00047)\",\"default\":null},{\"name\":\"reason\",\"type\":[\"null\",\"string\"],\"doc\":\"Reason for reversal (P2S-00048)\",\"default\":null},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"Reversed amount (P2S-00049)\",\"default\":null}]}],\"doc\":\"Reversal details if applicable\",\"default\":null},{\"name\":\"settlement\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"Settlement\",\"doc\":\"Information about the settlement of the transaction\",\"fields\":[{\"name\":\"settlementNetwork\",\"type\":[\"null\",\"string\"],\"doc\":\"The payment network used in the settlement (e.g., Visa, Mastercard) (P2S-00050)\",\"default\":null},{\"name\":\"settlementId\",\"type\":[\"null\",\"string\"],\"doc\":\"The transaction ID used for settlement (P2S-00051)\",\"default\":null}]}],\"doc\":\"Settlement details if applicable\",\"default\":null},{\"name\":\"transaction\",\"type\":{\"type\":\"record\",\"name\":\"Transaction\",\"doc\":\"Details of the transaction\",\"fields\":[{\"name\":\"type\",\"type\":\"string\",\"doc\":\"Transaction type (Purchase, Load, etc.) (P2S-00053)\"},{\"name\":\"transactionExternalId\",\"type\":\"string\",\"doc\":\"Id sent by the processor (P2S-00056)\"},{\"name\":\"transactionCountryCode\",\"type\":\"string\",\"doc\":\"Country code of the transaction (P2S-00057)\"},{\"name\":\"transactionStatus\",\"type\":\"string\",\"doc\":\"Lifecycle of the transaction (P2S-00058)\"},{\"name\":\"transactionAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10},\"doc\":\"Amount based on transaction status (P2S-00060)\"},{\"name\":\"currency\",\"type\":\"string\",\"doc\":\"Currency of amount (ISO4217 or numeric) (P2S-00062)\"},{\"name\":\"transactionAdditionalAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10},\"doc\":\"Additional Amount, Field 54 ISO8583 (P2S-00130)\"}]},\"doc\":\"Transaction details\"},{\"name\":\"transactionRequest\",\"type\":{\"type\":\"record\",\"name\":\"TransactionRequest\",\"doc\":\"Information about the transaction request\",\"fields\":[{\"name\":\"xPayWalletAuthMethod\",\"type\":[\"null\",\"string\"],\"doc\":\"Authentication met","hod used in the wallet transaction (e.g., biometric, PIN) (P2S-00073)\",\"default\":null},{\"name\":\"transactionRequestDatetime\",\"type\":\"string\",\"doc\":\"Acceptor local time (P2S-00074)\"},{\"name\":\"transactionRequestBillingAmount\",\"type\":{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10},\"doc\":\"Amount billed in issuer currency (P2S-00075)\"},{\"name\":\"transactionRequestBillingCurrency\",\"type\":\"string\",\"doc\":\"Billing currency (ISO4217) (P2S-00076)\"},{\"name\":\"transactionRequestStan\",\"type\":\"string\",\"doc\":\"Systems Trace Audit Number (P2S-00077)\"},{\"name\":\"transactionRequestRetrievalReferenceNumber\",\"type\":\"string\",\"doc\":\"Retrieval Reference Number (P2S-00078)\"},{\"name\":\"transactionRequestAmount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"Requested amount in local currency (P2S-00079)\",\"default\":null},{\"name\":\"transactionRequestCurrency\",\"type\":[\"null\",\"string\"],\"doc\":\"Currency of requested amount (P2S-00080)\",\"default\":null},{\"name\":\"transactionRequestTransmissionDatetime\",\"type\":\"string\",\"doc\":\"UTC transmission datetime (P2S-00081)\"},{\"name\":\"transactionRequestBillingRate\",\"type\":\"string\",\"doc\":\"Conversion rate (P2S-00082)\"},{\"name\":\"transactionRequestScheme\",\"type\":\"string\",\"doc\":\"Scheme processed the transaction (P2S-00083)\"},{\"name\":\"recurringFlag\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Recurring payment flag (P2S-00084)\",\"default\":null},{\"name\":\"technologyentryMode\",\"type\":\"string\",\"doc\":\"Technology entry mode (P2S-00085)\"},{\"name\":\"technologyentryModemagneticStripe\",\"type\":\"boolean\",\"doc\":\"Indicates if the card was swiped (magnetic stripe entry) (P2S-00086)\"},{\"name\":\"technologyentryModeEMVChip\",\"type\":\"boolean\",\"doc\":\"Indicates if the card was inserted for EMV chip-based processing (P2S-00087)\"},{\"name\":\"technologyentryModeContactless\",\"type\":\"boolean\",\"doc\":\"Indicates if the card was used for a contactless transaction (NFC) (P2S-00088)\"},{\"name\":\"technologyentryModemanualEntry\",\"type\":\"boolean\",\"doc\":\"Indicates if the card details were manually entered (P2S-00089)\"},{\"name\":\"technologyentryModeFallback\",\"type\":\"boolean\",\"doc\":\"Indicates if fallback processing was used (in case of EMV failure) (P2S-00090)\"},{\"name\":\"technologyentryModeNFC\",\"type\":\"boolean\",\"doc\":\"Indicates if NFC was used for the transaction (P2S-00091)\"},{\"name\":\"technologyPOSConditionCode\",\"type\":\"string\",\"doc\":\"POS condition code (P2S-00092)\"},{\"name\":\"technologyPOSConditionCodeCardPresent\",\"type\":\"boolean\",\"doc\":\"Indicates whether the card was physically present during the transaction (P2S-00093)\"},{\"name\":\"technologyPOSConditionCodetransactionCondition\",\"type\":[\"null\",\"string\"],\"doc\":\"Condition of the transaction (e.g., standard, refund) (P2S-00094)\",\"default\":null},{\"name\":\"technologyPOSConditionCodePinVerification\",\"type\":\"boolean\",\"doc\":\"Indicates if PIN verification was performed (P2S-00095)\"},{\"name\":\"technologyPOSConditionCodeSignatureAuthorization\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Indicates if signature authorization was used (P2S-00096)\",\"default\":null},{\"name\":\"technologyPOSConditionCodeOnlineAuthorization\",\"type\":\"boolean\",\"doc\":\"Indicates whether online authorization was performed (P2S-00097)\"},{\"name\":\"technologyPOSConditionCodeOfflineAuthorization\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Indicates whether offline authorization was used (P2S-00098)\",\"default\":null},{\"name\":\"technologyPOSConditionCodeFaceToFace\",\"type\":[\"null\",\"boolean\"],\"doc\":\"Indicates whether the transaction is face-to-face or remote (P2S-00099)\",\"default\":null},{\"name\":\"technologyEMVtagsServiceCode\",\"type\":[\"null\",\"string\"],\"doc\":\"Specifies the card service type (e.g., debit, credit) (P2S-00101)\",\"default\":null},{\"name\":\"technologyEMVtagsTransactionSequenceCounter\",\"type\":[\"null\",\"string\"],\"doc\":\"A unique sequence number for the transaction (P2S-00102)\",\"default\":null},{\"name\":\"technologyEMVtagsTerminalType\",\"type\":[\"null\",\"string\"],\"doc\":\"Type of terminal used to process the transaction (e.g., POS, ATM) (P2S-00103)\",\"default\":null},{\"name\":\"technologyEMVtagsTerminalCapabilities\",\"type\":[\"null\",\"string\"],\"doc\":\"Defines terminal capabilities (e.g., EMV, NFC) (P2S-00104)\",\"default\":null},{\"name\":\"technologyEMVtagsIAC\",\"type\":[\"null\",\"string\"],\"doc\":\"Issuer Action Code (indicates transaction outcome) (P2S-00105)\",\"default\":null},{\"name\":\"technologyEMVtagsAC\",\"type\":[\"null\",\"string\"],\"doc\":\"Cryptogram used in authorization (ARQC/TC/AAC) (P2S-00106)\",\"default\":null},{\"name\":\"technologyEMVtagsCID\",\"type\":[\"null\",\"string\"],\"doc\":\"Cryptogram Identifier, indicates the type of cryptogram (P2S-00107)\",\"default\":null},{\"name\":\"technologyEMVtagsAIP\",\"type\":[\"null\",\"string\"],\"doc\":\"Application Interchange Profile, defines card capabilities (P2S-00108)\",\"default\":null},{\"name\":\"technologyEMVtagsIAD\",\"type\":[\"null\",\"string\"],\"doc\":\"Issuer Application Data, used for issuer-specific risk management (P2S-00109)\",\"default\":null},{\"name\":\"technology3DSecureAuthenticationIndicator\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates the result of 3D Secure authentication (e.g., successful, failed) (P2S-00110)\",\"default\":null},{\"name\":\"technology3DSecure3DSVersion\",\"type\":[\"null\",\"string\"],\"doc\":\"Specifies the version of 3D Secure used (P2S-00111)\",\"default\":null},{\"name\":\"technology3DSecureIssuerAuthenticationData\",\"type\":[\"null\",\"string\"],\"doc\":\"Data used by the issuer for authentication (P2S-00112)\",\"default\":null},{\"name\":\"technology3DSecureAuthenticationResponse\",\"type\":[\"null\",\"string\"],\"doc\":\"Response from the issuer regarding authentication outcome (P2S-00113)\",\"default\":null},{\"name\":\"technology3DSecureCAVV\",\"type\":[\"null\",\"string\"],\"doc\":\"Cardholder Authentication Verification Value (used in 3D Secure) (P2S-00114)\",\"default\":null},{\"name\":\"technology3DSecureDSTransID\",\"type\":[\"null\",\"string\"],\"doc\":\"3D Secure 2 transaction identifier (P2S-00115)\",\"default\":null},{\"name\":\"technology3DSecureDeviceChannel\",\"type\":[\"null\",\"string\"],\"doc\":\"Indicates whether the transaction was made using a mobile device or desktop (P2S-00116)\",\"default\":null},{\"name\":\"technology3DSecureAMID\",\"type\":[\"null\",\"string\"],\"doc\":\"Authentication Method Indicator used in 3D Secure (e.g., biometric, PIN) (P2S-00117)\",\"default\":null},{\"name\":\"technology3DSecureAAV\",\"type\":[\"null\",\"string\"],\"doc\":\"Mastercard's equivalent of CAVV used in 3D Secure for cardholder authentication (P2S-00118)\",\"default\":null},{\"name\":\"technology3DSecureECI\",\"type\":[\"null\",\"string\"],\"doc\":\"Electronic Commerce Indicator used in 3D Secure transactions (P2S-00119)\",\"default\":null},{\"name\":\"xPayWalletWalletID\",\"type\":[\"null\",\"string\"],\"doc\":\"Unique identifier for the wallet user in the xPay system (P2S-00120)\",\"default\":null},{\"name\":\"xPayWalletTokenizedPAN\",\"type\":[\"null\",\"string\"],\"doc\":\"Token representing the actual PAN (Primary Account Number) for the transaction (P2S-00121)\",\"default\":null},{\"name\":\"xPayWalletDeviceId\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifier for the mobile device used for the transaction (P2S-00122)\",\"default\":null},{\"name\":\"xPayWalletTransactionToken\",\"type\":[\"null\",\"string\"],\"doc\":\"One-time token used for this specific transaction (P2S-00123)\",\"default\":null},{\"name\":\"xPayWalletWalletType\",\"type\":[\"null\",\"string\"],\"doc\":\"Identifies the wallet provider (e.g., Apple Pay, Google Pay) (P2S-00124)\",\"default\":null}]},\"doc\":\"Transaction request details\"},{\"name\":\"transactionResponse\",\"type\":{\"type\":\"record\",\"name\":\"TransactionResponse\",\"doc\":\"Information about the transaction response\",\"fields\":[{\"name\":\"code\",\"type\":\"string\",\"doc\":\"The approval code from the issuer (P2S-00125)\"},{\"name\":\"amount\",\"type\":[\"null\",{\"type\":\"bytes\",\"logicalType\":\"decimal\",\"precision\":20,\"scale\":10}],\"doc\":\"The amount authorized by the issuer (P2S-00126)\",\"default\":null},{\"name\":\"datetime\",\"type\":[\"null\",\"string\"],\"doc\":\"Response timestamp from the issuer (P2S-00127)\",\"default\":null},{\"name\":\"reason\",\"type\":\"string\",\"doc\":\"Reason for rejection if the transaction was declined (P2S-00128)\"},{\"name\":\"authorizationId\",\"type\":\"string\",\"doc\":\"The authorization number returned by the issuer (P2S-00129)\"}]},\"doc\":\"Transaction response details\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();
  static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.Conversions.DecimalConversion());
  }

  private static final BinaryMessageEncoder<Input> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Input> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Input> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Input> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Input> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Input to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Input from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Input instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Input fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Merchant acceptor details */
  private effyis.partners.p2s.shared.avro.meta.input.Acceptor acceptor;
  /** Acquiring institution details */
  private effyis.partners.p2s.shared.avro.meta.input.Acquirer acquirer;
  /** Card details */
  private effyis.partners.p2s.shared.avro.meta.input.Card card;
  /** Chargeback details if applicable */
  private effyis.partners.p2s.shared.avro.meta.input.Chargeback chargeback;
  /** Clearing details */
  private effyis.partners.p2s.shared.avro.meta.input.Clearing clearing;
  /** Payment instrument details */
  private effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument paymentInstrument;
  /** Reversal details if applicable */
  private effyis.partners.p2s.shared.avro.meta.input.Reversals reversals;
  /** Settlement details if applicable */
  private effyis.partners.p2s.shared.avro.meta.input.Settlement settlement;
  /** Transaction details */
  private effyis.partners.p2s.shared.avro.meta.input.Transaction transaction;
  /** Transaction request details */
  private effyis.partners.p2s.shared.avro.meta.input.TransactionRequest transactionRequest;
  /** Transaction response details */
  private effyis.partners.p2s.shared.avro.meta.input.TransactionResponse transactionResponse;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Input() {}

  /**
   * All-args constructor.
   * @param acceptor Merchant acceptor details
   * @param acquirer Acquiring institution details
   * @param card Card details
   * @param chargeback Chargeback details if applicable
   * @param clearing Clearing details
   * @param paymentInstrument Payment instrument details
   * @param reversals Reversal details if applicable
   * @param settlement Settlement details if applicable
   * @param transaction Transaction details
   * @param transactionRequest Transaction request details
   * @param transactionResponse Transaction response details
   */
  public Input(effyis.partners.p2s.shared.avro.meta.input.Acceptor acceptor, effyis.partners.p2s.shared.avro.meta.input.Acquirer acquirer, effyis.partners.p2s.shared.avro.meta.input.Card card, effyis.partners.p2s.shared.avro.meta.input.Chargeback chargeback, effyis.partners.p2s.shared.avro.meta.input.Clearing clearing, effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument paymentInstrument, effyis.partners.p2s.shared.avro.meta.input.Reversals reversals, effyis.partners.p2s.shared.avro.meta.input.Settlement settlement, effyis.partners.p2s.shared.avro.meta.input.Transaction transaction, effyis.partners.p2s.shared.avro.meta.input.TransactionRequest transactionRequest, effyis.partners.p2s.shared.avro.meta.input.TransactionResponse transactionResponse) {
    this.acceptor = acceptor;
    this.acquirer = acquirer;
    this.card = card;
    this.chargeback = chargeback;
    this.clearing = clearing;
    this.paymentInstrument = paymentInstrument;
    this.reversals = reversals;
    this.settlement = settlement;
    this.transaction = transaction;
    this.transactionRequest = transactionRequest;
    this.transactionResponse = transactionResponse;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return acceptor;
    case 1: return acquirer;
    case 2: return card;
    case 3: return chargeback;
    case 4: return clearing;
    case 5: return paymentInstrument;
    case 6: return reversals;
    case 7: return settlement;
    case 8: return transaction;
    case 9: return transactionRequest;
    case 10: return transactionResponse;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: acceptor = (effyis.partners.p2s.shared.avro.meta.input.Acceptor)value$; break;
    case 1: acquirer = (effyis.partners.p2s.shared.avro.meta.input.Acquirer)value$; break;
    case 2: card = (effyis.partners.p2s.shared.avro.meta.input.Card)value$; break;
    case 3: chargeback = (effyis.partners.p2s.shared.avro.meta.input.Chargeback)value$; break;
    case 4: clearing = (effyis.partners.p2s.shared.avro.meta.input.Clearing)value$; break;
    case 5: paymentInstrument = (effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument)value$; break;
    case 6: reversals = (effyis.partners.p2s.shared.avro.meta.input.Reversals)value$; break;
    case 7: settlement = (effyis.partners.p2s.shared.avro.meta.input.Settlement)value$; break;
    case 8: transaction = (effyis.partners.p2s.shared.avro.meta.input.Transaction)value$; break;
    case 9: transactionRequest = (effyis.partners.p2s.shared.avro.meta.input.TransactionRequest)value$; break;
    case 10: transactionResponse = (effyis.partners.p2s.shared.avro.meta.input.TransactionResponse)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'acceptor' field.
   * @return Merchant acceptor details
   */
  public effyis.partners.p2s.shared.avro.meta.input.Acceptor getAcceptor() {
    return acceptor;
  }


  /**
   * Sets the value of the 'acceptor' field.
   * Merchant acceptor details
   * @param value the value to set.
   */
  public void setAcceptor(effyis.partners.p2s.shared.avro.meta.input.Acceptor value) {
    this.acceptor = value;
  }

  /**
   * Gets the value of the 'acquirer' field.
   * @return Acquiring institution details
   */
  public effyis.partners.p2s.shared.avro.meta.input.Acquirer getAcquirer() {
    return acquirer;
  }


  /**
   * Sets the value of the 'acquirer' field.
   * Acquiring institution details
   * @param value the value to set.
   */
  public void setAcquirer(effyis.partners.p2s.shared.avro.meta.input.Acquirer value) {
    this.acquirer = value;
  }

  /**
   * Gets the value of the 'card' field.
   * @return Card details
   */
  public effyis.partners.p2s.shared.avro.meta.input.Card getCard() {
    return card;
  }


  /**
   * Sets the value of the 'card' field.
   * Card details
   * @param value the value to set.
   */
  public void setCard(effyis.partners.p2s.shared.avro.meta.input.Card value) {
    this.card = value;
  }

  /**
   * Gets the value of the 'chargeback' field.
   * @return Chargeback details if applicable
   */
  public effyis.partners.p2s.shared.avro.meta.input.Chargeback getChargeback() {
    return chargeback;
  }


  /**
   * Sets the value of the 'chargeback' field.
   * Chargeback details if applicable
   * @param value the value to set.
   */
  public void setChargeback(effyis.partners.p2s.shared.avro.meta.input.Chargeback value) {
    this.chargeback = value;
  }

  /**
   * Gets the value of the 'clearing' field.
   * @return Clearing details
   */
  public effyis.partners.p2s.shared.avro.meta.input.Clearing getClearing() {
    return clearing;
  }


  /**
   * Sets the value of the 'clearing' field.
   * Clearing details
   * @param value the value to set.
   */
  public void setClearing(effyis.partners.p2s.shared.avro.meta.input.Clearing value) {
    this.clearing = value;
  }

  /**
   * Gets the value of the 'paymentInstrument' field.
   * @return Payment instrument details
   */
  public effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument getPaymentInstrument() {
    return paymentInstrument;
  }


  /**
   * Sets the value of the 'paymentInstrument' field.
   * Payment instrument details
   * @param value the value to set.
   */
  public void setPaymentInstrument(effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument value) {
    this.paymentInstrument = value;
  }

  /**
   * Gets the value of the 'reversals' field.
   * @return Reversal details if applicable
   */
  public effyis.partners.p2s.shared.avro.meta.input.Reversals getReversals() {
    return reversals;
  }


  /**
   * Sets the value of the 'reversals' field.
   * Reversal details if applicable
   * @param value the value to set.
   */
  public void setReversals(effyis.partners.p2s.shared.avro.meta.input.Reversals value) {
    this.reversals = value;
  }

  /**
   * Gets the value of the 'settlement' field.
   * @return Settlement details if applicable
   */
  public effyis.partners.p2s.shared.avro.meta.input.Settlement getSettlement() {
    return settlement;
  }


  /**
   * Sets the value of the 'settlement' field.
   * Settlement details if applicable
   * @param value the value to set.
   */
  public void setSettlement(effyis.partners.p2s.shared.avro.meta.input.Settlement value) {
    this.settlement = value;
  }

  /**
   * Gets the value of the 'transaction' field.
   * @return Transaction details
   */
  public effyis.partners.p2s.shared.avro.meta.input.Transaction getTransaction() {
    return transaction;
  }


  /**
   * Sets the value of the 'transaction' field.
   * Transaction details
   * @param value the value to set.
   */
  public void setTransaction(effyis.partners.p2s.shared.avro.meta.input.Transaction value) {
    this.transaction = value;
  }

  /**
   * Gets the value of the 'transactionRequest' field.
   * @return Transaction request details
   */
  public effyis.partners.p2s.shared.avro.meta.input.TransactionRequest getTransactionRequest() {
    return transactionRequest;
  }


  /**
   * Sets the value of the 'transactionRequest' field.
   * Transaction request details
   * @param value the value to set.
   */
  public void setTransactionRequest(effyis.partners.p2s.shared.avro.meta.input.TransactionRequest value) {
    this.transactionRequest = value;
  }

  /**
   * Gets the value of the 'transactionResponse' field.
   * @return Transaction response details
   */
  public effyis.partners.p2s.shared.avro.meta.input.TransactionResponse getTransactionResponse() {
    return transactionResponse;
  }


  /**
   * Sets the value of the 'transactionResponse' field.
   * Transaction response details
   * @param value the value to set.
   */
  public void setTransactionResponse(effyis.partners.p2s.shared.avro.meta.input.TransactionResponse value) {
    this.transactionResponse = value;
  }

  /**
   * Creates a new Input RecordBuilder.
   * @return A new Input RecordBuilder
   */
  public static effyis.partners.p2s.shared.avro.meta.input.Input.Builder newBuilder() {
    return new effyis.partners.p2s.shared.avro.meta.input.Input.Builder();
  }

  /**
   * Creates a new Input RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Input RecordBuilder
   */
  public static effyis.partners.p2s.shared.avro.meta.input.Input.Builder newBuilder(effyis.partners.p2s.shared.avro.meta.input.Input.Builder other) {
    if (other == null) {
      return new effyis.partners.p2s.shared.avro.meta.input.Input.Builder();
    } else {
      return new effyis.partners.p2s.shared.avro.meta.input.Input.Builder(other);
    }
  }

  /**
   * Creates a new Input RecordBuilder by copying an existing Input instance.
   * @param other The existing instance to copy.
   * @return A new Input RecordBuilder
   */
  public static effyis.partners.p2s.shared.avro.meta.input.Input.Builder newBuilder(effyis.partners.p2s.shared.avro.meta.input.Input other) {
    if (other == null) {
      return new effyis.partners.p2s.shared.avro.meta.input.Input.Builder();
    } else {
      return new effyis.partners.p2s.shared.avro.meta.input.Input.Builder(other);
    }
  }

  /**
   * RecordBuilder for Input instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Input>
    implements org.apache.avro.data.RecordBuilder<Input> {

    /** Merchant acceptor details */
    private effyis.partners.p2s.shared.avro.meta.input.Acceptor acceptor;
    private effyis.partners.p2s.shared.avro.meta.input.Acceptor.Builder acceptorBuilder;
    /** Acquiring institution details */
    private effyis.partners.p2s.shared.avro.meta.input.Acquirer acquirer;
    private effyis.partners.p2s.shared.avro.meta.input.Acquirer.Builder acquirerBuilder;
    /** Card details */
    private effyis.partners.p2s.shared.avro.meta.input.Card card;
    private effyis.partners.p2s.shared.avro.meta.input.Card.Builder cardBuilder;
    /** Chargeback details if applicable */
    private effyis.partners.p2s.shared.avro.meta.input.Chargeback chargeback;
    private effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder chargebackBuilder;
    /** Clearing details */
    private effyis.partners.p2s.shared.avro.meta.input.Clearing clearing;
    private effyis.partners.p2s.shared.avro.meta.input.Clearing.Builder clearingBuilder;
    /** Payment instrument details */
    private effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument paymentInstrument;
    private effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument.Builder paymentInstrumentBuilder;
    /** Reversal details if applicable */
    private effyis.partners.p2s.shared.avro.meta.input.Reversals reversals;
    private effyis.partners.p2s.shared.avro.meta.input.Reversals.Builder reversalsBuilder;
    /** Settlement details if applicable */
    private effyis.partners.p2s.shared.avro.meta.input.Settlement settlement;
    private effyis.partners.p2s.shared.avro.meta.input.Settlement.Builder settlementBuilder;
    /** Transaction details */
    private effyis.partners.p2s.shared.avro.meta.input.Transaction transaction;
    private effyis.partners.p2s.shared.avro.meta.input.Transaction.Builder transactionBuilder;
    /** Transaction request details */
    private effyis.partners.p2s.shared.avro.meta.input.TransactionRequest transactionRequest;
    private effyis.partners.p2s.shared.avro.meta.input.TransactionRequest.Builder transactionRequestBuilder;
    /** Transaction response details */
    private effyis.partners.p2s.shared.avro.meta.input.TransactionResponse transactionResponse;
    private effyis.partners.p2s.shared.avro.meta.input.TransactionResponse.Builder transactionResponseBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(effyis.partners.p2s.shared.avro.meta.input.Input.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.acceptor)) {
        this.acceptor = data().deepCopy(fields()[0].schema(), other.acceptor);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (other.hasAcceptorBuilder()) {
        this.acceptorBuilder = effyis.partners.p2s.shared.avro.meta.input.Acceptor.newBuilder(other.getAcceptorBuilder());
      }
      if (isValidValue(fields()[1], other.acquirer)) {
        this.acquirer = data().deepCopy(fields()[1].schema(), other.acquirer);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (other.hasAcquirerBuilder()) {
        this.acquirerBuilder = effyis.partners.p2s.shared.avro.meta.input.Acquirer.newBuilder(other.getAcquirerBuilder());
      }
      if (isValidValue(fields()[2], other.card)) {
        this.card = data().deepCopy(fields()[2].schema(), other.card);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (other.hasCardBuilder()) {
        this.cardBuilder = effyis.partners.p2s.shared.avro.meta.input.Card.newBuilder(other.getCardBuilder());
      }
      if (isValidValue(fields()[3], other.chargeback)) {
        this.chargeback = data().deepCopy(fields()[3].schema(), other.chargeback);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (other.hasChargebackBuilder()) {
        this.chargebackBuilder = effyis.partners.p2s.shared.avro.meta.input.Chargeback.newBuilder(other.getChargebackBuilder());
      }
      if (isValidValue(fields()[4], other.clearing)) {
        this.clearing = data().deepCopy(fields()[4].schema(), other.clearing);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (other.hasClearingBuilder()) {
        this.clearingBuilder = effyis.partners.p2s.shared.avro.meta.input.Clearing.newBuilder(other.getClearingBuilder());
      }
      if (isValidValue(fields()[5], other.paymentInstrument)) {
        this.paymentInstrument = data().deepCopy(fields()[5].schema(), other.paymentInstrument);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (other.hasPaymentInstrumentBuilder()) {
        this.paymentInstrumentBuilder = effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument.newBuilder(other.getPaymentInstrumentBuilder());
      }
      if (isValidValue(fields()[6], other.reversals)) {
        this.reversals = data().deepCopy(fields()[6].schema(), other.reversals);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (other.hasReversalsBuilder()) {
        this.reversalsBuilder = effyis.partners.p2s.shared.avro.meta.input.Reversals.newBuilder(other.getReversalsBuilder());
      }
      if (isValidValue(fields()[7], other.settlement)) {
        this.settlement = data().deepCopy(fields()[7].schema(), other.settlement);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (other.hasSettlementBuilder()) {
        this.settlementBuilder = effyis.partners.p2s.shared.avro.meta.input.Settlement.newBuilder(other.getSettlementBuilder());
      }
      if (isValidValue(fields()[8], other.transaction)) {
        this.transaction = data().deepCopy(fields()[8].schema(), other.transaction);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (other.hasTransactionBuilder()) {
        this.transactionBuilder = effyis.partners.p2s.shared.avro.meta.input.Transaction.newBuilder(other.getTransactionBuilder());
      }
      if (isValidValue(fields()[9], other.transactionRequest)) {
        this.transactionRequest = data().deepCopy(fields()[9].schema(), other.transactionRequest);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (other.hasTransactionRequestBuilder()) {
        this.transactionRequestBuilder = effyis.partners.p2s.shared.avro.meta.input.TransactionRequest.newBuilder(other.getTransactionRequestBuilder());
      }
      if (isValidValue(fields()[10], other.transactionResponse)) {
        this.transactionResponse = data().deepCopy(fields()[10].schema(), other.transactionResponse);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (other.hasTransactionResponseBuilder()) {
        this.transactionResponseBuilder = effyis.partners.p2s.shared.avro.meta.input.TransactionResponse.newBuilder(other.getTransactionResponseBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing Input instance
     * @param other The existing instance to copy.
     */
    private Builder(effyis.partners.p2s.shared.avro.meta.input.Input other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.acceptor)) {
        this.acceptor = data().deepCopy(fields()[0].schema(), other.acceptor);
        fieldSetFlags()[0] = true;
      }
      this.acceptorBuilder = null;
      if (isValidValue(fields()[1], other.acquirer)) {
        this.acquirer = data().deepCopy(fields()[1].schema(), other.acquirer);
        fieldSetFlags()[1] = true;
      }
      this.acquirerBuilder = null;
      if (isValidValue(fields()[2], other.card)) {
        this.card = data().deepCopy(fields()[2].schema(), other.card);
        fieldSetFlags()[2] = true;
      }
      this.cardBuilder = null;
      if (isValidValue(fields()[3], other.chargeback)) {
        this.chargeback = data().deepCopy(fields()[3].schema(), other.chargeback);
        fieldSetFlags()[3] = true;
      }
      this.chargebackBuilder = null;
      if (isValidValue(fields()[4], other.clearing)) {
        this.clearing = data().deepCopy(fields()[4].schema(), other.clearing);
        fieldSetFlags()[4] = true;
      }
      this.clearingBuilder = null;
      if (isValidValue(fields()[5], other.paymentInstrument)) {
        this.paymentInstrument = data().deepCopy(fields()[5].schema(), other.paymentInstrument);
        fieldSetFlags()[5] = true;
      }
      this.paymentInstrumentBuilder = null;
      if (isValidValue(fields()[6], other.reversals)) {
        this.reversals = data().deepCopy(fields()[6].schema(), other.reversals);
        fieldSetFlags()[6] = true;
      }
      this.reversalsBuilder = null;
      if (isValidValue(fields()[7], other.settlement)) {
        this.settlement = data().deepCopy(fields()[7].schema(), other.settlement);
        fieldSetFlags()[7] = true;
      }
      this.settlementBuilder = null;
      if (isValidValue(fields()[8], other.transaction)) {
        this.transaction = data().deepCopy(fields()[8].schema(), other.transaction);
        fieldSetFlags()[8] = true;
      }
      this.transactionBuilder = null;
      if (isValidValue(fields()[9], other.transactionRequest)) {
        this.transactionRequest = data().deepCopy(fields()[9].schema(), other.transactionRequest);
        fieldSetFlags()[9] = true;
      }
      this.transactionRequestBuilder = null;
      if (isValidValue(fields()[10], other.transactionResponse)) {
        this.transactionResponse = data().deepCopy(fields()[10].schema(), other.transactionResponse);
        fieldSetFlags()[10] = true;
      }
      this.transactionResponseBuilder = null;
    }

    /**
      * Gets the value of the 'acceptor' field.
      * Merchant acceptor details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Acceptor getAcceptor() {
      return acceptor;
    }


    /**
      * Sets the value of the 'acceptor' field.
      * Merchant acceptor details
      * @param value The value of 'acceptor'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setAcceptor(effyis.partners.p2s.shared.avro.meta.input.Acceptor value) {
      validate(fields()[0], value);
      this.acceptorBuilder = null;
      this.acceptor = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'acceptor' field has been set.
      * Merchant acceptor details
      * @return True if the 'acceptor' field has been set, false otherwise.
      */
    public boolean hasAcceptor() {
      return fieldSetFlags()[0];
    }

    /**
     * Gets the Builder instance for the 'acceptor' field and creates one if it doesn't exist yet.
     * Merchant acceptor details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Acceptor.Builder getAcceptorBuilder() {
      if (acceptorBuilder == null) {
        if (hasAcceptor()) {
          setAcceptorBuilder(effyis.partners.p2s.shared.avro.meta.input.Acceptor.newBuilder(acceptor));
        } else {
          setAcceptorBuilder(effyis.partners.p2s.shared.avro.meta.input.Acceptor.newBuilder());
        }
      }
      return acceptorBuilder;
    }

    /**
     * Sets the Builder instance for the 'acceptor' field
     * Merchant acceptor details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setAcceptorBuilder(effyis.partners.p2s.shared.avro.meta.input.Acceptor.Builder value) {
      clearAcceptor();
      acceptorBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'acceptor' field has an active Builder instance
     * Merchant acceptor details
     * @return True if the 'acceptor' field has an active Builder instance
     */
    public boolean hasAcceptorBuilder() {
      return acceptorBuilder != null;
    }

    /**
      * Clears the value of the 'acceptor' field.
      * Merchant acceptor details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearAcceptor() {
      acceptor = null;
      acceptorBuilder = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'acquirer' field.
      * Acquiring institution details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Acquirer getAcquirer() {
      return acquirer;
    }


    /**
      * Sets the value of the 'acquirer' field.
      * Acquiring institution details
      * @param value The value of 'acquirer'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setAcquirer(effyis.partners.p2s.shared.avro.meta.input.Acquirer value) {
      validate(fields()[1], value);
      this.acquirerBuilder = null;
      this.acquirer = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'acquirer' field has been set.
      * Acquiring institution details
      * @return True if the 'acquirer' field has been set, false otherwise.
      */
    public boolean hasAcquirer() {
      return fieldSetFlags()[1];
    }

    /**
     * Gets the Builder instance for the 'acquirer' field and creates one if it doesn't exist yet.
     * Acquiring institution details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Acquirer.Builder getAcquirerBuilder() {
      if (acquirerBuilder == null) {
        if (hasAcquirer()) {
          setAcquirerBuilder(effyis.partners.p2s.shared.avro.meta.input.Acquirer.newBuilder(acquirer));
        } else {
          setAcquirerBuilder(effyis.partners.p2s.shared.avro.meta.input.Acquirer.newBuilder());
        }
      }
      return acquirerBuilder;
    }

    /**
     * Sets the Builder instance for the 'acquirer' field
     * Acquiring institution details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setAcquirerBuilder(effyis.partners.p2s.shared.avro.meta.input.Acquirer.Builder value) {
      clearAcquirer();
      acquirerBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'acquirer' field has an active Builder instance
     * Acquiring institution details
     * @return True if the 'acquirer' field has an active Builder instance
     */
    public boolean hasAcquirerBuilder() {
      return acquirerBuilder != null;
    }

    /**
      * Clears the value of the 'acquirer' field.
      * Acquiring institution details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearAcquirer() {
      acquirer = null;
      acquirerBuilder = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'card' field.
      * Card details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Card getCard() {
      return card;
    }


    /**
      * Sets the value of the 'card' field.
      * Card details
      * @param value The value of 'card'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setCard(effyis.partners.p2s.shared.avro.meta.input.Card value) {
      validate(fields()[2], value);
      this.cardBuilder = null;
      this.card = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'card' field has been set.
      * Card details
      * @return True if the 'card' field has been set, false otherwise.
      */
    public boolean hasCard() {
      return fieldSetFlags()[2];
    }

    /**
     * Gets the Builder instance for the 'card' field and creates one if it doesn't exist yet.
     * Card details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Card.Builder getCardBuilder() {
      if (cardBuilder == null) {
        if (hasCard()) {
          setCardBuilder(effyis.partners.p2s.shared.avro.meta.input.Card.newBuilder(card));
        } else {
          setCardBuilder(effyis.partners.p2s.shared.avro.meta.input.Card.newBuilder());
        }
      }
      return cardBuilder;
    }

    /**
     * Sets the Builder instance for the 'card' field
     * Card details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setCardBuilder(effyis.partners.p2s.shared.avro.meta.input.Card.Builder value) {
      clearCard();
      cardBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'card' field has an active Builder instance
     * Card details
     * @return True if the 'card' field has an active Builder instance
     */
    public boolean hasCardBuilder() {
      return cardBuilder != null;
    }

    /**
      * Clears the value of the 'card' field.
      * Card details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearCard() {
      card = null;
      cardBuilder = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'chargeback' field.
      * Chargeback details if applicable
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback getChargeback() {
      return chargeback;
    }


    /**
      * Sets the value of the 'chargeback' field.
      * Chargeback details if applicable
      * @param value The value of 'chargeback'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setChargeback(effyis.partners.p2s.shared.avro.meta.input.Chargeback value) {
      validate(fields()[3], value);
      this.chargebackBuilder = null;
      this.chargeback = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'chargeback' field has been set.
      * Chargeback details if applicable
      * @return True if the 'chargeback' field has been set, false otherwise.
      */
    public boolean hasChargeback() {
      return fieldSetFlags()[3];
    }

    /**
     * Gets the Builder instance for the 'chargeback' field and creates one if it doesn't exist yet.
     * Chargeback details if applicable
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder getChargebackBuilder() {
      if (chargebackBuilder == null) {
        if (hasChargeback()) {
          setChargebackBuilder(effyis.partners.p2s.shared.avro.meta.input.Chargeback.newBuilder(chargeback));
        } else {
          setChargebackBuilder(effyis.partners.p2s.shared.avro.meta.input.Chargeback.newBuilder());
        }
      }
      return chargebackBuilder;
    }

    /**
     * Sets the Builder instance for the 'chargeback' field
     * Chargeback details if applicable
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setChargebackBuilder(effyis.partners.p2s.shared.avro.meta.input.Chargeback.Builder value) {
      clearChargeback();
      chargebackBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'chargeback' field has an active Builder instance
     * Chargeback details if applicable
     * @return True if the 'chargeback' field has an active Builder instance
     */
    public boolean hasChargebackBuilder() {
      return chargebackBuilder != null;
    }

    /**
      * Clears the value of the 'chargeback' field.
      * Chargeback details if applicable
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearChargeback() {
      chargeback = null;
      chargebackBuilder = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'clearing' field.
      * Clearing details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Clearing getClearing() {
      return clearing;
    }


    /**
      * Sets the value of the 'clearing' field.
      * Clearing details
      * @param value The value of 'clearing'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setClearing(effyis.partners.p2s.shared.avro.meta.input.Clearing value) {
      validate(fields()[4], value);
      this.clearingBuilder = null;
      this.clearing = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'clearing' field has been set.
      * Clearing details
      * @return True if the 'clearing' field has been set, false otherwise.
      */
    public boolean hasClearing() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'clearing' field and creates one if it doesn't exist yet.
     * Clearing details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Clearing.Builder getClearingBuilder() {
      if (clearingBuilder == null) {
        if (hasClearing()) {
          setClearingBuilder(effyis.partners.p2s.shared.avro.meta.input.Clearing.newBuilder(clearing));
        } else {
          setClearingBuilder(effyis.partners.p2s.shared.avro.meta.input.Clearing.newBuilder());
        }
      }
      return clearingBuilder;
    }

    /**
     * Sets the Builder instance for the 'clearing' field
     * Clearing details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setClearingBuilder(effyis.partners.p2s.shared.avro.meta.input.Clearing.Builder value) {
      clearClearing();
      clearingBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'clearing' field has an active Builder instance
     * Clearing details
     * @return True if the 'clearing' field has an active Builder instance
     */
    public boolean hasClearingBuilder() {
      return clearingBuilder != null;
    }

    /**
      * Clears the value of the 'clearing' field.
      * Clearing details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearClearing() {
      clearing = null;
      clearingBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'paymentInstrument' field.
      * Payment instrument details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument getPaymentInstrument() {
      return paymentInstrument;
    }


    /**
      * Sets the value of the 'paymentInstrument' field.
      * Payment instrument details
      * @param value The value of 'paymentInstrument'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setPaymentInstrument(effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument value) {
      validate(fields()[5], value);
      this.paymentInstrumentBuilder = null;
      this.paymentInstrument = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'paymentInstrument' field has been set.
      * Payment instrument details
      * @return True if the 'paymentInstrument' field has been set, false otherwise.
      */
    public boolean hasPaymentInstrument() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'paymentInstrument' field and creates one if it doesn't exist yet.
     * Payment instrument details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument.Builder getPaymentInstrumentBuilder() {
      if (paymentInstrumentBuilder == null) {
        if (hasPaymentInstrument()) {
          setPaymentInstrumentBuilder(effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument.newBuilder(paymentInstrument));
        } else {
          setPaymentInstrumentBuilder(effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument.newBuilder());
        }
      }
      return paymentInstrumentBuilder;
    }

    /**
     * Sets the Builder instance for the 'paymentInstrument' field
     * Payment instrument details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setPaymentInstrumentBuilder(effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument.Builder value) {
      clearPaymentInstrument();
      paymentInstrumentBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'paymentInstrument' field has an active Builder instance
     * Payment instrument details
     * @return True if the 'paymentInstrument' field has an active Builder instance
     */
    public boolean hasPaymentInstrumentBuilder() {
      return paymentInstrumentBuilder != null;
    }

    /**
      * Clears the value of the 'paymentInstrument' field.
      * Payment instrument details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearPaymentInstrument() {
      paymentInstrument = null;
      paymentInstrumentBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'reversals' field.
      * Reversal details if applicable
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Reversals getReversals() {
      return reversals;
    }


    /**
      * Sets the value of the 'reversals' field.
      * Reversal details if applicable
      * @param value The value of 'reversals'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setReversals(effyis.partners.p2s.shared.avro.meta.input.Reversals value) {
      validate(fields()[6], value);
      this.reversalsBuilder = null;
      this.reversals = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'reversals' field has been set.
      * Reversal details if applicable
      * @return True if the 'reversals' field has been set, false otherwise.
      */
    public boolean hasReversals() {
      return fieldSetFlags()[6];
    }

    /**
     * Gets the Builder instance for the 'reversals' field and creates one if it doesn't exist yet.
     * Reversal details if applicable
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Reversals.Builder getReversalsBuilder() {
      if (reversalsBuilder == null) {
        if (hasReversals()) {
          setReversalsBuilder(effyis.partners.p2s.shared.avro.meta.input.Reversals.newBuilder(reversals));
        } else {
          setReversalsBuilder(effyis.partners.p2s.shared.avro.meta.input.Reversals.newBuilder());
        }
      }
      return reversalsBuilder;
    }

    /**
     * Sets the Builder instance for the 'reversals' field
     * Reversal details if applicable
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setReversalsBuilder(effyis.partners.p2s.shared.avro.meta.input.Reversals.Builder value) {
      clearReversals();
      reversalsBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'reversals' field has an active Builder instance
     * Reversal details if applicable
     * @return True if the 'reversals' field has an active Builder instance
     */
    public boolean hasReversalsBuilder() {
      return reversalsBuilder != null;
    }

    /**
      * Clears the value of the 'reversals' field.
      * Reversal details if applicable
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearReversals() {
      reversals = null;
      reversalsBuilder = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'settlement' field.
      * Settlement details if applicable
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Settlement getSettlement() {
      return settlement;
    }


    /**
      * Sets the value of the 'settlement' field.
      * Settlement details if applicable
      * @param value The value of 'settlement'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setSettlement(effyis.partners.p2s.shared.avro.meta.input.Settlement value) {
      validate(fields()[7], value);
      this.settlementBuilder = null;
      this.settlement = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'settlement' field has been set.
      * Settlement details if applicable
      * @return True if the 'settlement' field has been set, false otherwise.
      */
    public boolean hasSettlement() {
      return fieldSetFlags()[7];
    }

    /**
     * Gets the Builder instance for the 'settlement' field and creates one if it doesn't exist yet.
     * Settlement details if applicable
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Settlement.Builder getSettlementBuilder() {
      if (settlementBuilder == null) {
        if (hasSettlement()) {
          setSettlementBuilder(effyis.partners.p2s.shared.avro.meta.input.Settlement.newBuilder(settlement));
        } else {
          setSettlementBuilder(effyis.partners.p2s.shared.avro.meta.input.Settlement.newBuilder());
        }
      }
      return settlementBuilder;
    }

    /**
     * Sets the Builder instance for the 'settlement' field
     * Settlement details if applicable
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setSettlementBuilder(effyis.partners.p2s.shared.avro.meta.input.Settlement.Builder value) {
      clearSettlement();
      settlementBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'settlement' field has an active Builder instance
     * Settlement details if applicable
     * @return True if the 'settlement' field has an active Builder instance
     */
    public boolean hasSettlementBuilder() {
      return settlementBuilder != null;
    }

    /**
      * Clears the value of the 'settlement' field.
      * Settlement details if applicable
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearSettlement() {
      settlement = null;
      settlementBuilder = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'transaction' field.
      * Transaction details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Transaction getTransaction() {
      return transaction;
    }


    /**
      * Sets the value of the 'transaction' field.
      * Transaction details
      * @param value The value of 'transaction'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setTransaction(effyis.partners.p2s.shared.avro.meta.input.Transaction value) {
      validate(fields()[8], value);
      this.transactionBuilder = null;
      this.transaction = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'transaction' field has been set.
      * Transaction details
      * @return True if the 'transaction' field has been set, false otherwise.
      */
    public boolean hasTransaction() {
      return fieldSetFlags()[8];
    }

    /**
     * Gets the Builder instance for the 'transaction' field and creates one if it doesn't exist yet.
     * Transaction details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.Transaction.Builder getTransactionBuilder() {
      if (transactionBuilder == null) {
        if (hasTransaction()) {
          setTransactionBuilder(effyis.partners.p2s.shared.avro.meta.input.Transaction.newBuilder(transaction));
        } else {
          setTransactionBuilder(effyis.partners.p2s.shared.avro.meta.input.Transaction.newBuilder());
        }
      }
      return transactionBuilder;
    }

    /**
     * Sets the Builder instance for the 'transaction' field
     * Transaction details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setTransactionBuilder(effyis.partners.p2s.shared.avro.meta.input.Transaction.Builder value) {
      clearTransaction();
      transactionBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transaction' field has an active Builder instance
     * Transaction details
     * @return True if the 'transaction' field has an active Builder instance
     */
    public boolean hasTransactionBuilder() {
      return transactionBuilder != null;
    }

    /**
      * Clears the value of the 'transaction' field.
      * Transaction details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearTransaction() {
      transaction = null;
      transactionBuilder = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionRequest' field.
      * Transaction request details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.TransactionRequest getTransactionRequest() {
      return transactionRequest;
    }


    /**
      * Sets the value of the 'transactionRequest' field.
      * Transaction request details
      * @param value The value of 'transactionRequest'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setTransactionRequest(effyis.partners.p2s.shared.avro.meta.input.TransactionRequest value) {
      validate(fields()[9], value);
      this.transactionRequestBuilder = null;
      this.transactionRequest = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionRequest' field has been set.
      * Transaction request details
      * @return True if the 'transactionRequest' field has been set, false otherwise.
      */
    public boolean hasTransactionRequest() {
      return fieldSetFlags()[9];
    }

    /**
     * Gets the Builder instance for the 'transactionRequest' field and creates one if it doesn't exist yet.
     * Transaction request details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.TransactionRequest.Builder getTransactionRequestBuilder() {
      if (transactionRequestBuilder == null) {
        if (hasTransactionRequest()) {
          setTransactionRequestBuilder(effyis.partners.p2s.shared.avro.meta.input.TransactionRequest.newBuilder(transactionRequest));
        } else {
          setTransactionRequestBuilder(effyis.partners.p2s.shared.avro.meta.input.TransactionRequest.newBuilder());
        }
      }
      return transactionRequestBuilder;
    }

    /**
     * Sets the Builder instance for the 'transactionRequest' field
     * Transaction request details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setTransactionRequestBuilder(effyis.partners.p2s.shared.avro.meta.input.TransactionRequest.Builder value) {
      clearTransactionRequest();
      transactionRequestBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transactionRequest' field has an active Builder instance
     * Transaction request details
     * @return True if the 'transactionRequest' field has an active Builder instance
     */
    public boolean hasTransactionRequestBuilder() {
      return transactionRequestBuilder != null;
    }

    /**
      * Clears the value of the 'transactionRequest' field.
      * Transaction request details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearTransactionRequest() {
      transactionRequest = null;
      transactionRequestBuilder = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'transactionResponse' field.
      * Transaction response details
      * @return The value.
      */
    public effyis.partners.p2s.shared.avro.meta.input.TransactionResponse getTransactionResponse() {
      return transactionResponse;
    }


    /**
      * Sets the value of the 'transactionResponse' field.
      * Transaction response details
      * @param value The value of 'transactionResponse'.
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setTransactionResponse(effyis.partners.p2s.shared.avro.meta.input.TransactionResponse value) {
      validate(fields()[10], value);
      this.transactionResponseBuilder = null;
      this.transactionResponse = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'transactionResponse' field has been set.
      * Transaction response details
      * @return True if the 'transactionResponse' field has been set, false otherwise.
      */
    public boolean hasTransactionResponse() {
      return fieldSetFlags()[10];
    }

    /**
     * Gets the Builder instance for the 'transactionResponse' field and creates one if it doesn't exist yet.
     * Transaction response details
     * @return This builder.
     */
    public effyis.partners.p2s.shared.avro.meta.input.TransactionResponse.Builder getTransactionResponseBuilder() {
      if (transactionResponseBuilder == null) {
        if (hasTransactionResponse()) {
          setTransactionResponseBuilder(effyis.partners.p2s.shared.avro.meta.input.TransactionResponse.newBuilder(transactionResponse));
        } else {
          setTransactionResponseBuilder(effyis.partners.p2s.shared.avro.meta.input.TransactionResponse.newBuilder());
        }
      }
      return transactionResponseBuilder;
    }

    /**
     * Sets the Builder instance for the 'transactionResponse' field
     * Transaction response details
     * @param value The builder instance that must be set.
     * @return This builder.
     */

    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder setTransactionResponseBuilder(effyis.partners.p2s.shared.avro.meta.input.TransactionResponse.Builder value) {
      clearTransactionResponse();
      transactionResponseBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'transactionResponse' field has an active Builder instance
     * Transaction response details
     * @return True if the 'transactionResponse' field has an active Builder instance
     */
    public boolean hasTransactionResponseBuilder() {
      return transactionResponseBuilder != null;
    }

    /**
      * Clears the value of the 'transactionResponse' field.
      * Transaction response details
      * @return This builder.
      */
    public effyis.partners.p2s.shared.avro.meta.input.Input.Builder clearTransactionResponse() {
      transactionResponse = null;
      transactionResponseBuilder = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Input build() {
      try {
        Input record = new Input();
        if (acceptorBuilder != null) {
          try {
            record.acceptor = this.acceptorBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("acceptor"));
            throw e;
          }
        } else {
          record.acceptor = fieldSetFlags()[0] ? this.acceptor : (effyis.partners.p2s.shared.avro.meta.input.Acceptor) defaultValue(fields()[0]);
        }
        if (acquirerBuilder != null) {
          try {
            record.acquirer = this.acquirerBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("acquirer"));
            throw e;
          }
        } else {
          record.acquirer = fieldSetFlags()[1] ? this.acquirer : (effyis.partners.p2s.shared.avro.meta.input.Acquirer) defaultValue(fields()[1]);
        }
        if (cardBuilder != null) {
          try {
            record.card = this.cardBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("card"));
            throw e;
          }
        } else {
          record.card = fieldSetFlags()[2] ? this.card : (effyis.partners.p2s.shared.avro.meta.input.Card) defaultValue(fields()[2]);
        }
        if (chargebackBuilder != null) {
          try {
            record.chargeback = this.chargebackBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("chargeback"));
            throw e;
          }
        } else {
          record.chargeback = fieldSetFlags()[3] ? this.chargeback : (effyis.partners.p2s.shared.avro.meta.input.Chargeback) defaultValue(fields()[3]);
        }
        if (clearingBuilder != null) {
          try {
            record.clearing = this.clearingBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("clearing"));
            throw e;
          }
        } else {
          record.clearing = fieldSetFlags()[4] ? this.clearing : (effyis.partners.p2s.shared.avro.meta.input.Clearing) defaultValue(fields()[4]);
        }
        if (paymentInstrumentBuilder != null) {
          try {
            record.paymentInstrument = this.paymentInstrumentBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("paymentInstrument"));
            throw e;
          }
        } else {
          record.paymentInstrument = fieldSetFlags()[5] ? this.paymentInstrument : (effyis.partners.p2s.shared.avro.meta.input.PaymentInstrument) defaultValue(fields()[5]);
        }
        if (reversalsBuilder != null) {
          try {
            record.reversals = this.reversalsBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("reversals"));
            throw e;
          }
        } else {
          record.reversals = fieldSetFlags()[6] ? this.reversals : (effyis.partners.p2s.shared.avro.meta.input.Reversals) defaultValue(fields()[6]);
        }
        if (settlementBuilder != null) {
          try {
            record.settlement = this.settlementBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("settlement"));
            throw e;
          }
        } else {
          record.settlement = fieldSetFlags()[7] ? this.settlement : (effyis.partners.p2s.shared.avro.meta.input.Settlement) defaultValue(fields()[7]);
        }
        if (transactionBuilder != null) {
          try {
            record.transaction = this.transactionBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("transaction"));
            throw e;
          }
        } else {
          record.transaction = fieldSetFlags()[8] ? this.transaction : (effyis.partners.p2s.shared.avro.meta.input.Transaction) defaultValue(fields()[8]);
        }
        if (transactionRequestBuilder != null) {
          try {
            record.transactionRequest = this.transactionRequestBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("transactionRequest"));
            throw e;
          }
        } else {
          record.transactionRequest = fieldSetFlags()[9] ? this.transactionRequest : (effyis.partners.p2s.shared.avro.meta.input.TransactionRequest) defaultValue(fields()[9]);
        }
        if (transactionResponseBuilder != null) {
          try {
            record.transactionResponse = this.transactionResponseBuilder.build();
          } catch (org.apache.avro.AvroMissingFieldException e) {
            e.addParentField(record.getSchema().getField("transactionResponse"));
            throw e;
          }
        } else {
          record.transactionResponse = fieldSetFlags()[10] ? this.transactionResponse : (effyis.partners.p2s.shared.avro.meta.input.TransactionResponse) defaultValue(fields()[10]);
        }
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Input>
    WRITER$ = (org.apache.avro.io.DatumWriter<Input>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Input>
    READER$ = (org.apache.avro.io.DatumReader<Input>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










